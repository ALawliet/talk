enum ACTION_TYPE {

    # Represents a Love.
    LOVE
}

enum ASSET_METRICS_SORT {

    # Represents a LoveAction.
    LOVE
}

input CreateLoveInput {

    # The item's id for which we are to create a love.
    item_id: ID!

    # The type of the item for which we are to create the love.
    item_type: ACTION_ITEM_TYPE!
}

# LoveAction is used by users who "love" a specific entity.
type LoveAction implements Action {

    # The ID of the action.
    id: ID!

    # The author of the action.
    user: User

    # The time when the Action was updated.
    updated_at: Date

    # The time when the Action was created.
    created_at: Date
}

type LoveActionSummary implements ActionSummary {

    # The count of actions with this group.
    count: Int

    # The current user's action.
    current_user: LoveAction
}

# A summary of counts related to all the Loves on an Asset.
type LoveAssetActionSummary implements AssetActionSummary {

    # Number of loves associated with actionable types on this this Asset.
    actionCount: Int

    # Number of unique actionable types that are referenced by the loves.
    actionableItemCount: Int
}

type CreateLoveResponse implements Response {

    # The love that was created.
    love: LoveAction

    # An array of errors relating to the mutation that occurred.
    errors: [UserError]
}

type RootMutation {

    # Creates a love on an entity.
    createLove(love: CreateLoveInput!): CreateLoveResponse
}
